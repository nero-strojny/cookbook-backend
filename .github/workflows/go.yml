name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  continuous-integration:
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v ./test -DB_STRING "${{ secrets.DB_STRING }}" -ENV 'dev'

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    # if: github.ref == 'refs/heads/master'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Create config file
        run: |
          echo -e '{\n\t"connectionString": "${{ secrets.DB_STRING }}",\n\t"emailPassword": "${{ secrets.EMAIL_PASSWORD }}"\n}' > config.json
      - name: Docker ECR push
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/tastyboi-server:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/tastyboi-server:latest
      - name: AWS Deployment
        run:  aws ecs update-service --force-new-deployment --cluster tastyboi-server-cluster --service tastyboi-server --region ${{ secrets.AWS_REGION }}
